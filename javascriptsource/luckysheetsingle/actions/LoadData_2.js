// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
async function injectDeps(deps) {
	return await new Promise((resolve, reject) => {
		if (!Array.isArray(deps)) {
			deps = [deps];
		}
		window.dojoDynamicRequire(deps, function () { resolve(Array.from(arguments)) });
	});
}
function onDestroy(containerId, cb) {
	var myWidget = dojo.dijit.registry.byId(containerId);

	myWidget.addOnDestroy(cb);
}
// END EXTRA CODE

/**
 * @param {string} targetId
 * @param {string} myEntity
 * @returns {Promise.<void>}
 */
export async function LoadData_2(targetId, myEntity) {
	// BEGIN USER CODE
	const [on, lang] = await injectDeps(["dojo/on", "dojo/_base/lang"]);
	const container = document.querySelector('#' + targetId);

	const disp = on(container, '_loaded', () => {
		console.log('_loaded', myEntity);
		// Your logic
		mx.data.get({
			xpath: "//" + myEntity,
			callback: function (objs) {
				console.log("Received " + objs.length + " MxObjects");
				if (objs.length) {
					const obj = objs[0];

					let attributes = obj.getAttributes();
					let filtered_attributes = attributes.filter(attr => !attr.includes('.'));



					for (let i = 0; i < filtered_attributes.length; i++) {

						luckysheet.setCellValue(0, i, filtered_attributes[i])
					}
				}
			}
		});
	});

	onDestroy(targetId, () => {
		console.log('dispose widget ' + targetId);
		disp.remove();
	})
	// END USER CODE
}
